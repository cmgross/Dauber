@model Dauber.Models.MyAccountUpdateViewModel

@{
    ViewBag.Title = "Update Plan";
}

<h3>Update Plan</h3>
<br />
<div id="dPaymentInfo" style="display: none;">
    <h4>Payment Information</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            <label for="txtCardNumber">Card Number *</label>
        </dt>

        <dd>
            <input type="text" name="CardNumber" id="txtCardNumber" placeholder="Card Number e.g 1234..." />
        </dd>

        <dt>
            <label for="txtCvc">Cvc *</label>
        </dt>

        <dd>
            <input type="text" name="Cvc" id="txtCvc" placeholder="Security Code e.g 987" />
        </dd>

        <dt>
            <label for="txtExpiryMonth">Expiry Month (MM) *</label>
        </dt>

        <dd>
            <input type="text" name="ExpiryMonth" id="txtExpiryMonth" placeholder="01" />
        </dd>

        <dt>
            <label for="txtExpiryYear">Expiry Year (YYYY) *</label>)
        </dt>

        <dd>
            <input type="text" name="ExpiryYear" id="txtExpiryYear" placeholder="2015" />
        </dd>

        <dt></dt>
        <dd><br/>
            <a href="https://stripe.com/about" target="_blank"><img src="~/Images/poweredbyStripe.png" /></a>
        </dd>
    </dl>
</div>
<br /><br />
@Html.HiddenFor(m => m.HasPaymentMethod)
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <h4>Plan Selection</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.PlanId, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.PlanId, Model.Plans, new { @class = "form-control", style = "width:250px" })
                    @Html.ValidationMessageFor(model => model.PlanId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PlanCost, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.PlanCost, "{0:c}", new { @class = "form-control", @readonly = "readonly", style = "width:100px" })
                    @Html.ValidationMessageFor(model => model.PlanId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PlanMax, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.PlanMax, new {@class = "form-control", @readonly = "readonly", style = "width:100px"})
                    @Html.ValidationMessageFor(model => model.PlanMax, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumberOfClients, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.NumberOfClients, new { @class = "form-control", @readonly = "readonly", style = "width:100px" })
                    @Html.ValidationMessageFor(model => model.NumberOfClients, "", new { @class = "text-danger" })
                </div>
            </div>

            @* http://stackoverflow.com/questions/8757963/avoiding-duplicate-form-submission-in-asp-net-mvc-by-clicking-submit-twice
                        these likely need to be hidden fields
                <div class="form-group">
                    @Html.LabelFor(model => model.ApiKey, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ApiKey, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.ApiKey, "", new {@class = "text-danger"})
                    </div>

                </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.HasPaymentMethod, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.HasPaymentMethod)
                                @Html.ValidationMessageFor(model => model.HasPaymentMethod, "", new {@class = "text-danger"})
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CustomerId, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CustomerId, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.CustomerId, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CoachId, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CoachId, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.CoachId, "", new {@class = "text-danger"})
                        </div>
                    </div>

            *@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @*@Html.HiddenFor(model => model.Token, new { id = "hdnToken" })*@
                    <input type="submit" value="Save" id="btnSave" class="btn btn-success" disabled="disabled" />
                </div>
            </div>
        </div>
    }
    @*add planChange.js, jquery validation, stripe.js, etc*@

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/PlanChange")
    }
